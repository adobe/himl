[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "himl"
dynamic = ["version"]
description = "A hierarchical config using YAML in Python"
readme = "README.md"
license = "Apache-2.0"
authors = [
    {name = "Adobe", email = "noreply@adobe.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",

    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
requires-python = ">=3.9"
dependencies = [
    "PyYAML==6.0.3",
    "deepmerge==2.0",
    "pathlib2==2.3.7.post1",
]

[project.optional-dependencies]
s3 = ["boto3==1.40.50"]
aws = ["boto3==1.40.50"]  # Alias for s3 for backward compatibility
vault = ["hvac==1.2.1"]
all = ["boto3==1.40.50", "hvac==1.2.1"]
dev = [
    "pytest==8.4.2",
    "pytest-cov==7.0.0",
    "pytest-mock==3.15.1",
    "pytest-xdist==3.8.0",
    "coverage[toml]==7.10.7",
    "black==25.9.0",
    "flake8==7.3.0",
    "mypy==1.18.2",
    "types-PyYAML==6.0.12.20250915",
    "boto3==1.40.50",
    "hvac==1.2.1",
    "bump-my-version==1.2.4",
    "build==1.3.0",
    "twine==6.2.0",
]

[project.scripts]
himl = "himl.main:run"
himl-config-merger = "himl.config_merger:run"

[project.urls]
Homepage = "https://github.com/adobe/himl"
Repository = "https://github.com/adobe/himl"
Documentation = "https://github.com/adobe/himl#readme"
"Bug Tracker" = "https://github.com/adobe/himl/issues"

[tool.setuptools_scm]
write_to = "himl/_version.py"

[tool.bumpversion]
current_version = "0.18.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
tag = true
sign_tags = false
tag_name = "{new_version}"
tag_message = "Bump version: {current_version} â†’ {new_version}"
allow_dirty = false
commit = true
message = "[RELEASE] - Release version {new_version}"
commit_args = ""

[[tool.bumpversion.files]]
filename = "README.md"
search = "Latest version is: {current_version}"
replace = "Latest version is: {new_version}"

[[tool.bumpversion.files]]
filename = "himl/main.py"
search = "version='%(prog)s v{{version}}'.format(version=\"{current_version}\")"
replace = "version='%(prog)s v{{version}}'.format(version=\"{new_version}\")"

[tool.coverage.run]
source = ["himl"]
omit = [
    "*/tests/*",
    "*/test_*",
    "himl/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''



[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "boto3.*",
    "botocore.*",
    "hvac.*",
    "deepmerge.*",
    "pathlib2.*",
]
ignore_missing_imports = true
